<<<<<<< HEAD
﻿
@model PriseEnMain.ViewModels.CreateInstrumentVM
@{
    ViewData["Title"] = "Contrats";
}

<div>Autres Informations</div>
<hr />
<br />
<p>
    @Html.ActionLink("+ Create New One", "Create", "Contrats", new { typeId = Model.TypeInstrumentId, emetteurId = Model.EmetteurId, instrumentId = Model.InstrumentSousJacentId }, new { @class = "btn btn-outline-success rounded-0" })
</p>


<form asp-controller="Instruments" asp-action="CreateChooseAttribut">
    @for (int i = 0; i < Model.Attributs.Count; i++)
    {
        if (Model.Attributs[i].AttributeTypeValueType != "Contrat"
            && Model.Attributs[i].AttributeTypeValueType != "Instrument"
            && Model.Attributs[i].AttributeTypeValueType != "Emetteur")
        {

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <div class="form-group row">
                    <label asp-for="@Model.Attributs[i].Value" class="col-sm-2 col-form-label">@Model.Attributs[i].AttributeTypeName</label>
                    <div class="col-sm-10">
                        <input asp-for="@Model.Attributs[i].Value" class="form-control" type="@Model.Attributs[i].AttributeTypeValueType" />
                        <span asp-validation-for="@Model.Attributs[i].Value" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <input type="hidden" asp-for="@Model.Attributs[i].AttributeTypeId">
            <input type="hidden" asp-for="@Model.Attributs[i].AttributeTypeName">
            <input type="hidden" asp-for="@Model.Attributs[i].AttributeTypeValueType">

        }

    }

    <div class="form-group">
        <input asp-for="TypeInstrumentId" type="hidden" />
        <input asp-for="EmetteurId" type="hidden" />
        <input asp-for="InstrumentSousJacentId" type="hidden" />
        <input asp-for="ContratId" type="hidden" />
        <input type="submit" value="Next" class = "btn btn-outline-success rounded-0" />
    </div>
</form>

    <br />
    <div class="btn-container">
        <div class="btn-container">
            @Html.ActionLink("Back", "CreateChooseInstrumentSousjacent", "Instruments", new { typeId = Model.TypeInstrumentId, emetteurId = Model.EmetteurId, instrumentId = Model.InstrumentSousJacentId }, new { @class = "btn btn-outline-success rounded-0" })
        </div>


    </div>
=======
﻿@model PriseEnMain.ViewModels.CreateInstrumentVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Plus d'informations</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateChooseAttribut">
            <div class="text-danger"></div>
            <div class="form-group">
                @foreach (var item in Model.Attributs)
                {
                    @Html.DisplayFor(m => item.Name, new { @class = "control-label" })<br />
                    <input asp-for="@item.value" type="@item.TypeAttribut" class="form-control" />
                    <span class="text-danger"></span>
                }
            </div>
            <div class="form-group">
                <input asp-for="TypeInstrumentId" type="hidden" />
                <input asp-for="EmetteurId" type="hidden" />
                <input asp-for="InstrumentSousJacentId" type="hidden" />
                <input asp-for="ContratId" type="hidden" />
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back To Instrument Sous-jacent", "CreateChooseContrat", "Instruments", new { typeId = Model.TypeInstrumentId, emetteurId = Model.EmetteurId, instrumentId = Model.InstrumentSousJacentId }, new { @class = "btn btn-outline-success rounded-0" })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
>>>>>>> e3accd7050a85c28ae57251593eeaa2ce74cd1d4
