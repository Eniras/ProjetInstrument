// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriseEnMain.Data;

namespace PriseEnMain.Migrations
{
    [DbContext(typeof(PartengContext))]
    partial class PartengContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PriseEnMain.Models.Attribut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeAttributId")
                        .HasColumnType("int");

                    b.Property<int?>("ValueContratId")
                        .HasColumnType("int");

                    b.Property<int?>("ValueEmetteurId")
                        .HasColumnType("int");

                    b.Property<int>("ValueInstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("ValueOther")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("TypeAttributId");

                    b.HasIndex("ValueContratId");

                    b.HasIndex("ValueEmetteurId");

                    b.ToTable("Attributs");
                });

            modelBuilder.Entity("PriseEnMain.Models.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("PriseEnMain.Models.Emetteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emetteurs");
                });

            modelBuilder.Entity("PriseEnMain.Models.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeInstrumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeInstrumentId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("PriseEnMain.Models.InstrumentSous_jacent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("InstrumentSous_jacents");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeAttribut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeAttributs");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeInstrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeInstruments");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeInstrumentTypeAttribut", b =>
                {
                    b.Property<int>("TypeInstrumentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeAttributId")
                        .HasColumnType("int");

                    b.HasKey("TypeInstrumentId", "TypeAttributId");

                    b.HasIndex("TypeAttributId");

                    b.ToTable("TypeInstrumentTypeAttributs");
                });

            modelBuilder.Entity("PriseEnMain.Models.Attribut", b =>
                {
                    b.HasOne("PriseEnMain.Models.Instrument", "Instrument")
                        .WithMany("Attributs")
                        .HasForeignKey("InstrumentId");

                    b.HasOne("PriseEnMain.Models.TypeAttribut", "TypeAttribut")
                        .WithMany()
                        .HasForeignKey("TypeAttributId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriseEnMain.Models.Contrat", "ValueContrat")
                        .WithMany()
                        .HasForeignKey("ValueContratId");

                    b.HasOne("PriseEnMain.Models.Emetteur", "ValueEmetteur")
                        .WithMany()
                        .HasForeignKey("ValueEmetteurId");

                    b.Navigation("Instrument");

                    b.Navigation("TypeAttribut");

                    b.Navigation("ValueContrat");

                    b.Navigation("ValueEmetteur");
                });

            modelBuilder.Entity("PriseEnMain.Models.Instrument", b =>
                {
                    b.HasOne("PriseEnMain.Models.TypeInstrument", "TypeInstrument")
                        .WithMany()
                        .HasForeignKey("TypeInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeInstrument");
                });

            modelBuilder.Entity("PriseEnMain.Models.InstrumentSous_jacent", b =>
                {
                    b.HasOne("PriseEnMain.Models.TypeInstrument", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeInstrumentTypeAttribut", b =>
                {
                    b.HasOne("PriseEnMain.Models.TypeAttribut", "TypeAttribut")
                        .WithMany("TypeInstrumentTypeAttributs")
                        .HasForeignKey("TypeAttributId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriseEnMain.Models.TypeInstrument", "TypeInstrument")
                        .WithMany("TypeInstrumentTypeAttributs")
                        .HasForeignKey("TypeInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeAttribut");

                    b.Navigation("TypeInstrument");
                });

            modelBuilder.Entity("PriseEnMain.Models.Instrument", b =>
                {
                    b.Navigation("Attributs");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeAttribut", b =>
                {
                    b.Navigation("TypeInstrumentTypeAttributs");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeInstrument", b =>
                {
                    b.Navigation("TypeInstrumentTypeAttributs");
                });
#pragma warning restore 612, 618
        }
    }
}
