// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriseEnMain.Data;

namespace PriseEnMain.Migrations
{
    [DbContext(typeof(PartengContext))]
    [Migration("20210119104942_Instrument")]
    partial class Instrument
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PriseEnMain.Models.Attribut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Attributs");
                });

            modelBuilder.Entity("PriseEnMain.Models.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("PriseEnMain.Models.Emetteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emetteurs");
                });

            modelBuilder.Entity("PriseEnMain.Models.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<int?>("EmetteurId")
                        .HasColumnType("int");

                    b.Property<int?>("InstrumentSousJacentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeInstrumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.HasIndex("EmetteurId");

                    b.HasIndex("InstrumentSousJacentId");

                    b.HasIndex("TypeInstrumentId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("PriseEnMain.Models.InstrumentSous_jacent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("InstrumentSous_jacents");
                });

            modelBuilder.Entity("PriseEnMain.Models.TypeInstrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeInstruments");
                });

            modelBuilder.Entity("PriseEnMain.Models.Attribut", b =>
                {
                    b.HasOne("PriseEnMain.Models.Instrument", null)
                        .WithMany("Attributs")
                        .HasForeignKey("InstrumentId");
                });

            modelBuilder.Entity("PriseEnMain.Models.Instrument", b =>
                {
                    b.HasOne("PriseEnMain.Models.Contrat", "Contrat")
                        .WithMany()
                        .HasForeignKey("ContratId");

                    b.HasOne("PriseEnMain.Models.Emetteur", "Emetteur")
                        .WithMany()
                        .HasForeignKey("EmetteurId");

                    b.HasOne("PriseEnMain.Models.Instrument", "InstrumentSousJacent")
                        .WithMany()
                        .HasForeignKey("InstrumentSousJacentId");

                    b.HasOne("PriseEnMain.Models.TypeInstrument", "TypeInstrument")
                        .WithMany()
                        .HasForeignKey("TypeInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");

                    b.Navigation("Emetteur");

                    b.Navigation("InstrumentSousJacent");

                    b.Navigation("TypeInstrument");
                });

            modelBuilder.Entity("PriseEnMain.Models.InstrumentSous_jacent", b =>
                {
                    b.HasOne("PriseEnMain.Models.TypeInstrument", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PriseEnMain.Models.Instrument", b =>
                {
                    b.Navigation("Attributs");
                });
#pragma warning restore 612, 618
        }
    }
}
